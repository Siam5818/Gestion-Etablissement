name: CI/CD Laravel Microservices

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-microservices:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [GClasses, GCours, GETemps, GEtudiants, GProfs]

    steps:
      - name: 🛠️ Récupération du code
        uses: actions/checkout@v3

      - name: 📂 Vérification des répertoires
        run: ls -R

      - name: 📂 Se déplacer dans le microservice ${{ matrix.service }}
        run: cd microservices/${{ matrix.service }}

      - name: 🐘 Installation de PHP et Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: 📂 Créer les répertoires de cache et de stockage si nécessaire
        run: |
          mkdir -p bootstrap/cache
          chmod -R 775 bootstrap/cache
          mkdir -p storage/framework/cache/data
          chmod -R 775 storage/framework/cache
          chmod -R 775 storage/framework/cache/data
          mkdir -p storage/framework/sessions
          chmod -R 775 storage/framework/sessions
          mkdir -p storage/framework/views
          chmod -R 775 storage/framework/views

      - name: 📦 Installation des dépendances Laravel
        run: |
          cd microservices/${{ matrix.service }}
          composer install --no-progress --no-interaction --prefer-dist

      - name: 🔧 Préparer l'environnement pour ${{ matrix.service }}
        run: |
          cd microservices/${{ matrix.service }}
          cp .env.example .env
          php artisan key:generate
          touch database/database.sqlite  # Créer le fichier de base de données SQLite

      - name: 🔍 Exécution des tests unitaires pour ${{ matrix.service }}
        run: |
          cd microservices/${{ matrix.service }}
          php artisan migrate --env=testing --force  # Exécuter les migrations avant les tests
          php artisan test

      - name: 🐳 Construction de l'image Docker pour ${{ matrix.service }}
        run: |
          docker build -t my-microservice-${{ matrix.service }}:latest .
        working-directory: ./microservices/${{ matrix.service }}

      - name: 🔑 Connexion à Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: 📤 Pousser l'image Docker pour ${{ matrix.service }}
        run: docker push my-microservice-${{ matrix.service }}:latest
